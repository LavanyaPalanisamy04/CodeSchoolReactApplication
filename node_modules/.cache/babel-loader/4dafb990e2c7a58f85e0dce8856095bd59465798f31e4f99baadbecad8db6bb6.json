{"ast":null,"code":"var _jsxFileName = \"/Users/manav/Desktop/frontend/src/components/DashboardPage.js\",\n  _s = $RefreshSig$();\n// File: DashboardPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './DashboardPage.css'; // Import your CSS file\nimport CourseList from './CourseList'; // Import your CourseList component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DashboardPage() {\n  _s();\n  const [enrolledCourses, setEnrolledCourses] = useState([]);\n  const [availableCourses, setAvailableCourses] = useState([]);\n  useEffect(() => {\n    // Fetch enrolled courses and available courses from your database API\n    fetch('your-api-endpoint-for-enrolled-courses') // Replace with your API endpoint\n    .then(response => response.json()).then(data => setEnrolledCourses(data));\n    fetch('your-api-endpoint-for-available-courses') // Replace with your API endpoint\n    .then(response => response.json()).then(data => setAvailableCourses(data));\n  }, []);\n\n  // Limit the number of displayed courses to a maximum of 5\n  const limitedEnrolledCourses = enrolledCourses.slice(0, 5);\n  const limitedAvailableCourses = availableCourses.slice(0, 5);\n  const handleLogout = () => {\n    // Implement your logout logic here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"top-navbar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/dashboard\",\n        className: \"navbar-logo\",\n        children: \"CodeSchool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-links\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-button\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(CourseList, {\n        title: \"Enrolled Courses\",\n        courses: limitedEnrolledCourses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CourseList, {\n        title: \"Available Courses\",\n        courses: limitedAvailableCourses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardPage, \"T/1o+RpQB6TiUVvX2HNvU3ZZ7/Y=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","CourseList","jsxDEV","_jsxDEV","DashboardPage","_s","enrolledCourses","setEnrolledCourses","availableCourses","setAvailableCourses","fetch","then","response","json","data","limitedEnrolledCourses","slice","limitedAvailableCourses","handleLogout","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","courses","_c","$RefreshReg$"],"sources":["/Users/manav/Desktop/frontend/src/components/DashboardPage.js"],"sourcesContent":["// File: DashboardPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './DashboardPage.css'; // Import your CSS file\nimport CourseList from './CourseList'; // Import your CourseList component\n\nfunction DashboardPage() {\n  const [enrolledCourses, setEnrolledCourses] = useState([]);\n  const [availableCourses, setAvailableCourses] = useState([]);\n\n  useEffect(() => {\n    // Fetch enrolled courses and available courses from your database API\n    fetch('your-api-endpoint-for-enrolled-courses') // Replace with your API endpoint\n      .then((response) => response.json())\n      .then((data) => setEnrolledCourses(data));\n\n    fetch('your-api-endpoint-for-available-courses') // Replace with your API endpoint\n      .then((response) => response.json())\n      .then((data) => setAvailableCourses(data));\n  }, []);\n\n  // Limit the number of displayed courses to a maximum of 5\n  const limitedEnrolledCourses = enrolledCourses.slice(0, 5);\n  const limitedAvailableCourses = availableCourses.slice(0, 5);\n\n  const handleLogout = () => {\n    // Implement your logout logic here\n  };\n\n  return (\n    <div>\n      <nav className=\"top-navbar\">\n        <Link to=\"/dashboard\" className=\"navbar-logo\">\n          CodeSchool\n        </Link>\n        <div className=\"navbar-links\">\n          <button onClick={handleLogout} className=\"logout-button\">Logout</button>\n        </div>\n      </nav>\n      <div className=\"dashboard-container\">\n        <CourseList title=\"Enrolled Courses\" courses={limitedEnrolledCourses} />\n        <CourseList title=\"Available Courses\" courses={limitedAvailableCourses} />\n      </div>\n    </div>\n  );\n}\n\nexport default DashboardPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,qBAAqB,CAAC,CAAC;AAC9B,OAAOC,UAAU,MAAM,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACd;IACAW,KAAK,CAAC,wCAAwC,CAAC,CAAC;IAAA,CAC7CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKP,kBAAkB,CAACO,IAAI,CAAC,CAAC;IAE3CJ,KAAK,CAAC,yCAAyC,CAAC,CAAC;IAAA,CAC9CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,mBAAmB,CAACK,IAAI,CAAC,CAAC;EAC9C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,sBAAsB,GAAGT,eAAe,CAACU,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1D,MAAMC,uBAAuB,GAAGT,gBAAgB,CAACQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAE5D,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB;EAAA,CACD;EAED,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAKiB,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACzBhB,OAAA,CAACH,IAAI;QAACqB,EAAE,EAAC,YAAY;QAACD,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAC;MAE9C;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACPtB,OAAA;QAAKiB,SAAS,EAAC,cAAc;QAAAD,QAAA,eAC3BhB,OAAA;UAAQuB,OAAO,EAAER,YAAa;UAACE,SAAS,EAAC,eAAe;UAAAD,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNtB,OAAA;MAAKiB,SAAS,EAAC,qBAAqB;MAAAD,QAAA,gBAClChB,OAAA,CAACF,UAAU;QAAC0B,KAAK,EAAC,kBAAkB;QAACC,OAAO,EAAEb;MAAuB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxEtB,OAAA,CAACF,UAAU;QAAC0B,KAAK,EAAC,mBAAmB;QAACC,OAAO,EAAEX;MAAwB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CAvCQD,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAyCtB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}